{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId","updateTime","setState","getTime","toUTCString","slice","this","window","setInterval","prevProps","console","info","name","props","debug","clearInterval","className","Component","App","hasClock","clockName","handleLeftClick","handleRightClick","event","preventDefault","getRandomName","value","now","toString","updateClockName","document","addEventListener","removeEventListener","PureComponent","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,EAyBEC,WAAa,WACX,EAAKC,SAAS,CAAEJ,KAAM,IAAIC,QA1B9B,EA6BEI,QAAU,WACR,OAAO,EAAKN,MAAMC,KAAKM,cAAcC,OAAO,IAAK,IA9BrD,uDAOE,WACEC,KAAKN,QAAUO,OAAOC,YAAYF,KAAKL,WAAY,OARvD,gCAWE,SAAmBQ,GAEjBC,QAAQC,KAAKL,KAAKH,WAEdM,EAAUG,OAASN,KAAKO,MAAMD,MAEhCF,QAAQI,MAAR,uBAA8BL,EAAUG,KAAxC,eAAmDN,KAAKO,MAAMD,SAjBpE,kCAqBE,WACEL,OAAOQ,cAAcT,KAAKN,WAtB9B,oBAiCE,WACE,IAAQY,EAASN,KAAKO,MAAdD,KACFd,EAAOQ,KAAKH,UAElB,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGlB,WA9CX,GAA2BmB,aCDdC,G,MAAb,4MACErB,MAAe,CACbsB,UAAU,EACVC,UAAW,WAHf,EAMEpB,QAAU,EANZ,EAsBEqB,gBAAkB,WAChB,EAAKnB,SAAS,CAAEiB,UAAU,KAvB9B,EA0BEG,iBAAmB,SAACC,GAClBA,EAAMC,iBAEN,EAAKtB,SAAS,CAAEiB,UAAU,KA7B9B,EAgCEM,cAAgB,WACd,IAAMC,EAAQ3B,KAAK4B,MAAMC,WAAWvB,OAAO,GAE3C,MAAM,SAAN,OAAgBqB,IAnCpB,EAsCEG,gBAAkB,WAChB,EAAK3B,SAAS,CAAEkB,UAAW,EAAKK,mBAvCpC,uDAQE,WACEK,SAASC,iBAAiB,QAASzB,KAAKe,iBACxCS,SAASC,iBAAiB,cAAezB,KAAKgB,kBAE9ChB,KAAKN,QAAUO,OAAOC,YAAYF,KAAKuB,gBAAiB,QAZ5D,kCAeE,WACEC,SAASE,oBAAoB,QAAS1B,KAAKe,iBAC3CS,SAASE,oBAAoB,cAAe1B,KAAKgB,kBAEjDf,OAAOQ,cAAcT,KAAKN,WAnB9B,oBA0CE,WACE,MAAgCM,KAAKT,MAA7BsB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CAECG,GAAY,cAAC,EAAD,CAAOP,KAAMQ,WAjDlC,GAAyBa,kBCNzBC,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.12eab7d6.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  time: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: State = {\n    time: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(this.updateTime, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    // eslint-disable-next-line no-console\n    console.info(this.getTime());\n\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  updateTime = () => {\n    this.setState({ time: new Date() });\n  };\n\n  getTime = (): string => {\n    return this.state.time.toUTCString().slice(-12, -4);\n  };\n\n  render() {\n    const { name } = this.props;\n    const time = this.getTime();\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time}\n        </span>\n      </div>\n    );\n  }\n}\n","import { PureComponent } from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends PureComponent<{}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleLeftClick);\n    document.addEventListener('contextmenu', this.handleRightClick);\n\n    this.timerId = window.setInterval(this.updateClockName, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleLeftClick);\n    document.removeEventListener('contextmenu', this.handleRightClick);\n\n    window.clearInterval(this.timerId);\n  }\n\n  handleLeftClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  getRandomName = (): string => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  updateClockName = () => {\n    this.setState({ clockName: this.getRandomName() });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}